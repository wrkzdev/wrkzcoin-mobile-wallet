name: react-native-android-build-apk
on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build-android:
    name: ${{ matrix.build_name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_name: ['bundle', 'apk']
    steps: 
      - uses: actions/checkout@v2

      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      # config java sdk version
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Decode Google services configuration file
      - name: Decode google-services.json
        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}
        run: echo $FIREBASE_SECRET > android/app/google-services.json

      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install npm dependencies
        run: |
          yarn --network-concurrency 1 --network-timeout 120000

      - name: Build Android Release APK
        if: matrix.build_name == 'apk'
        run: |
          perl -pi -e 's/YOUR_SENTRY_TOKEN/$ENV{TOKEN}/' android/sentry.properties
          export SENTRY_PROPERTIES=android/sentry.properties
          cd android && ./gradlew assembleRelease
        env:
          TOKEN: ${{ secrets.SENTRY_TOKEN }}

      - name: Build Android Release AAB
        if: matrix.build_name == 'bundle'
        run: |
          perl -pi -e 's/YOUR_SENTRY_TOKEN/$ENV{TOKEN}/' android/sentry.properties
          export SENTRY_PROPERTIES=android/sentry.properties
          cd android && ./gradlew bundleRelease
        env:
          TOKEN: ${{ secrets.SENTRY_TOKEN }}

      - name: Sign APK / AAB
        uses: r0adkll/sign-android-release@v1
        if: matrix.build_name == 'bundle' || matrix.build_name == 'apk'
        with:
          releaseDirectory: android/app/build/outputs/${{ matrix.build_name }}/release
          signingKeyBase64: ${{ secrets.MYAPP_RELEASE_STORE_FILE_KEY }}
          alias: ${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}
          keyPassword: ${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}

      # Upload to S3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 # Or other version
      - name: Install awscli via pipx # Isolates dependencies
        id: install-s3
        continue-on-error: true
        shell: bash
        run: |
          export PATH=~/.local/bin:$PATH
          pip3 install --user pipenv pipx
          pipx install awscli awscli-plugin-endpoint
      - name: S3 Upload
        env:
          BINARY_DISCORD_HOOK: ${{ secrets.DISCORD_HOOK }}
          BINARY_UPLOAD: 'https://wrkzcoin.s3.fr-par.scw.cloud/'
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }} # optional: defaults to us-east-1
          AWS_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          DEST_DIR: 'wrkzmolet'
          COMMIT_SHA: ${{ github.sha }}
          REPO: 'wrkzmolet'
        shell: bash
        run: |
          FILESIZE=$(ls -lah "${SIGNED_RELEASE_FILE}" | awk '{ print $5}')
          FILENAME="$(basename -- ${SIGNED_RELEASE_FILE})"
          DATE_WITH_TIME=`date "+%Y%m%d-%H%M"`
          SHA8=${COMMIT_SHA::8}
          OUT_FILENAME="${DATE_WITH_TIME}-${COMMIT_SHA::8}-${FILENAME}"
          URL_FILE="\`\`\`${BINARY_UPLOAD}${DEST_DIR}/$OUT_FILENAME\`\`\`"
          BUILD_CONTENT="$REPO-$SHA8 Size: $FILESIZE "$URL_FILE
          aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
          aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
          aws configure set default.region ${AWS_REGION}
          aws s3 cp "${SIGNED_RELEASE_FILE}" "s3://${AWS_S3_BUCKET}/${DEST_DIR}/${OUT_FILENAME}" --no-progress --endpoint-url "${AWS_ENDPOINT}" --acl public-read
          aws configure set aws_access_key_id null
          aws configure set aws_secret_access_key null
          aws configure set default.region null
          curl -H "Content-Type: application/json" -X POST -d "{\"username\": \"BuildBot-$REPO\", \"content\": \"$BUILD_CONTENT\"}" ${BINARY_DISCORD_HOOK}

